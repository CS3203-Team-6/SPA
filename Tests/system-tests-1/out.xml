<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>AutoTester</name><parsing_time_taken>12074.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="invalid first arg cannot be underscore">1</id><querystr><![CDATA[variable v; Select v such that Uses(_, v)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>37.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid second arg contains white space">2</id><querystr><![CDATA[stmt s; Select s such that Uses(s, "invalid variable")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>54.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="invalid underscore">3</id><querystr><![CDATA[stmt s; Select s such that Uses(s, "_")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>26.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="invalid too many underscore">4</id><querystr><![CDATA[stmt s; Select s such that Uses(s, __)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>30.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" With="1" CondNum="3" RelNum="1" comment="invalid with clause">5</id><querystr><![CDATA[stmt s; Select s with Uses(s, "minus1")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>24.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" CondNum="2" RelNum="1" comment="invalid no such that">6</id><querystr><![CDATA[stmt s; Select s Uses(s, "minus1")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>19.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid extra comma">7</id><querystr><![CDATA[stmt s; Select s such that Uses(s, "minus1", )]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid variable name">8</id><querystr><![CDATA[stmt s; Select s such that Uses(s, "1minus")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid synonym">9</id><querystr><![CDATA[stmt s; constant c; Select s such that Uses(c, "minus1")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>36.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="print all statements">10</id><querystr><![CDATA[stmt s; procedure p; Select s such that Uses(p, "minus1")]]></querystr>
<stuans></stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474</correct>
<time_taken>209.000000</time_taken>
<failed>
<missing>1,10,100,101,102,103,104,105,106,107,108,109,11,110,111,112,113,114,115,116,117,118,119,12,120,121,122,123,124,125,126,127,128,129,13,130,131,132,133,134,135,136,137,138,139,14,140,141,142,143,144,145,146,147,148,149,15,150,151,152,153,154,155,156,157,158,159,16,160,161,162,163,164,165,166,167,168,169,17,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,19,190,191,192,193,194,195,196,197,198,199,2,20,200,201,202,203,204,205,206,207,208,209,21,210,211,212,213,214,215,216,217,218,219,22,220,221,222,223,224,225,226,227,228,229,23,230,231,232,233,234,235,236,237,238,239,24,240,241,242,243,244,245,246,247,248,249,25,250,251,252,253,254,255,256,257,258,259,26,260,261,262,263,264,265,266,267,268,269,27,270,271,272,273,274,275,276,277,278,279,28,280,281,282,283,284,285,286,287,288,289,29,290,291,292,293,294,295,296,297,298,299,3,30,300,301,302,303,304,305,306,307,308,309,31,310,311,312,313,314,315,316,317,318,319,32,320,321,322,323,324,325,326,327,328,329,33,330,331,332,333,334,335,336,337,338,339,34,340,341,342,343,344,345,346,347,348,349,35,350,351,352,353,354,355,356,357,358,359,36,360,361,362,363,364,365,366,367,368,369,37,370,371,372,373,374,375,376,377,378,379,38,380,381,382,383,384,385,386,387,388,389,39,390,391,392,393,394,395,396,397,398,399,4,40,400,401,402,403,404,405,406,407,408,409,41,410,411,412,413,414,415,416,417,418,419,42,420,421,422,423,424,425,426,427,428,429,43,430,431,432,433,434,435,436,437,438,439,44,440,441,442,443,444,445,446,447,448,449,45,450,451,452,453,454,455,456,457,458,459,46,460,461,462,463,464,465,466,467,468,469,47,470,471,472,473,474,48,49,5,50,51,52,53,54,55,56,57,58,59,6,60,61,62,63,64,65,66,67,68,69,7,70,71,72,73,74,75,76,77,78,79,8,80,81,82,83,84,85,86,87,88,89,9,90,91,92,93,94,95,96,97,98,99</missing>
<additional></additional>
<summary>
<expected>474</expected>
<matched>0</matched>
<missing>474</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="print all procedures">11</id><querystr><![CDATA[procedure p; Select p such that Uses(p,_)]]></querystr>
<stuans></stuans>
<correct>TestA,TestB,TestC,TenWhileLoop,procedure,fruits,colours,Pr0c3dUr3,oneCall,transportation,country</correct>
<time_taken>95.000000</time_taken>
<failed>
<missing>Pr0c3dUr3,TenWhileLoop,TestA,TestB,TestC,colours,country,fruits,oneCall,procedure,transportation</missing>
<additional></additional>
<summary>
<expected>11</expected>
<matched>0</matched>
<missing>11</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="4" RelNum="1" comment="print all statements that uses a variable">12</id><querystr><![CDATA[stmt s; Select s such that Uses(s,_)]]></querystr>
<stuans>32,104,87,342,5,148,76,436,70,418,160,12,95,431,149,77,33,105,422,68,343,4,419,161,13,107,31,6,167,15,30,106,7,462,8,463,9,102,81,239,165,17,82,54,412,236,18,110,22,111,23,51,24,225,409,250,391,461,89,50,117,25,53,114,26,39,385,91,52,115,27,28,29,389,97,100,36,348,465,38,471,40,41,42,44,47,254,395,45,46,229,405,48,403,55,237,413,56,69,423,57,152,60,169,235,411,428,150,62,159,421,429,151,63,157,65,67,74,84,98,457,37,101,108,469,20,112,118,120,121,123,124,125,127,128,449,131,292,133,441,139,209,300,439,141,294,142,143,288,144,79,147,201,308,296,153,306,64,156,310,314,10,162,11,163,318,14,166,410,234,168,170,171,172,173,177,180,181,182,399,184,259,185,394,255,189,190,191,192,193,346,248,194,249,195,356,196,197,244,198,202,203,364,204,205,358,207,352,208,362,210,211,372,212,213,366,339,216,336,219,380,220,221,374,222,223,404,228,382,414,230,231,376,416,232,417,233,321,268,256,240,241,266,242,243,245,270,246,247,274,272,396,257,328,261,263,267,320,269,273,275,277,278,279,280,135,281,283,284,390,251,285,287,289,290,137,291,293,295,297,299,302,303,304,307,309,311,312,315,316,317,319,322,323,325,326,327,329,330,331,332,333,334,335,218,337,338,347,351,354,355,360,361,363,365,367,369,370,371,373,375,377,379,384,386,388,392,400,402,406,224,408,58,420,425,426,75,433,73,435,437,438,440,442,443,444,90,451,453,94,454,455,88,456,460,96,464,466,467,472,474,35,103,109,113,119,122,130,132,145,146,72,434,16,164,175,178,183,187,176,2,43,49,59,66,80,83,85,86,92</stuans>
<correct>2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,127,128,130,131,132,133,135,137,139,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,207,208,209,210,211,212,213,216,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,254,255,256,257,259,261,263,266,267,268,269,270,272,273,274,275,277,278,279,280,281,283,284,285,287,288,289,290,291,292,293,294,295,296,297,299,300,302,303,304,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,342,343,346,347,348,351,352,354,355,356,358,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,379,380,382,384,385,386,388,389,390,391,392,394,395,396,399,400,402,403,404,405,406,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,425,426,428,429,431,433,434,435,436,437,438,439,440,441,442,443,444,449,451,453,454,455,456,457,460,461,462,463,464,465,466,467,469,471,472,474</correct>
<time_taken>205.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="program lines that use green">13</id><querystr><![CDATA[stmt p; Select p such that Uses(p, "green")]]></querystr>
<stuans>131,292,107,26,114,284,187,224,251,332,123,171,233,268,272,170,95,242,307,291,2,293,294,120,295,245,222,334,119,160,173,96,335,159,274,269,20,112,237,64,156,109,113,183,122,135,133,128,124,178,172,108,175,72,434,404,234,168,169,164,16,167,15,163,11,162,10,161,14,8,32,35,43,49,58,66,69,60,56,54,52,42,40,33,30,28,73,75,79,80,83,85,86,88,90,92,81,76,74</stuans>
<correct>268,272,269,284,274,291,292,293,294,295,307,334,332,335,237,234,233,135,133,131,128,124,123,120,114,112,108,107,122,119,113,109,96,95,92,85,81,74,66,54,52,26,224,222,434,187,167,162,161,160,156,164,159,88,86,79,76,75,72,404,80,69,32,30,28,10,8,2,73,64,60,56,49,43,42,40,35,33,14,251,245,242,183,178,171,170,168,175,173,172,169,90,16,15,11,20,58,83,163</correct>
<time_taken>105.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="read stmts dont use variables">14</id><querystr><![CDATA[read r; Select r such that Uses(r, "sum")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>34.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="print stmts that use b">15</id><querystr><![CDATA[print pr; Select pr such that Uses(pr, "b")]]></querystr>
<stuans>151,148,125,139</stuans>
<correct>125,139,148,151</correct>
<time_taken>41.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
